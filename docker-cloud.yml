version: '3.2'
services:
  proxy:
    image: traefik
    command:
      - "--api"
      - "--entrypoints=Name:http Address::80 Redirect.EntryPoint:https"
      # - "--entrypoints=Name:http Address::80 {% if traefik_force_https == 'true' %}Redirect.EntryPoint:https{% endif %}"
      # - "--entrypoints=Name:https Address::443 TLS:/home/${HOST_ROOT_DOMAIN}/ssl/gogson.local.pem,/ssl/gogson.local.key"
      - "--entrypoints=Name:https Address::443 TLS"
      - "--defaultentrypoints=http,https"
      - "--acme"
      - "--acme.storage=/etc/traefik/acme/acme.json"
      - "--acme.entryPoint=https"
      - "--acme.httpChallenge.entryPoint=http"
      - "--acme.onHostRule=true"
      - "--acme.onDemand=false"
      - "--acme.email=${PROXY_ACME_EMAIL}"
      - "--acme.storage=/etc/traefik/acme/acme.json"
      - "--logLevel=DEBUG"
      - "--traefikLog.filePath=/etc/traefik/acme/traefik.log"
      - "--traefikLog.format=json"
      - "--accessLog.filePath=/etc/traefik/acme/access.log"
      - "--accessLog.format=json"
      - "--docker"
      - "--docker.swarmMode"
      - "--docker.network=proxy"
      - "--docker.endpoint=unix:///var/run/docker.sock"
      - "--docker.domain=${HOST_ROOT_DOMAIN}"
      - "--docker.watch"
      - "--web.metrics.datadog=true"
      - "--web.metrics.datadog.address=datadog-agent:8125"
    networks:
      - proxy
      - agents
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - traefik_data:/etc/traefik/acme
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      mode: global
      labels:
        - "traefik.docker.network=proxy"
        - "traefik.enable=true"
        - "traefik.basic.frontend.rule=Host:${PROXY_TRAEFIK_DOMAIN}"
        - "traefik.basic.port=8080"
        - "traefik.basic.protocol=http"
        - "traefik.frontend.auth.basic=${PROXY_TRAEFIK_BASIC_AUTH}"
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  portainer:
    image: portainer/portainer
    command: "-H tcp://tasks.agent:9001 --tlsskipverify"
    ports:
      - target: 9000
        published: 9000
        protocol: tcp
        mode: host
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - proxy
      - agents
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.docker.network=proxy"
        - "traefik.enable=true"
        - "traefik.port=9000"
        - "traefik.frontend.rule=Host:${PROXY_PORTAINER_DOMAIN}"

  agent:
    image: portainer/agent
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    ports:
      - target: 9001
        published: 9001
        protocol: tcp
        mode: host
    networks:
      - agents
    deploy:
      mode: global

  datadog-agent:
    image: datadog/agent:latest
    environment:
      - "DD_API_KEY=${DATADOG_AGENT_API_KEY}"
      - "DD_LOGS_ENABLED=true"
      - "DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true"
      - "DD_AC_EXCLUDE=name:datadog-agent"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    networks:
      - agents
    deploy:
      mode: global
      restart_policy:
        condition: any

  whoami:
    image: jwilder/whoami
    ports:
      - target: 9043
        published: 8000
        protocol: tcp
        mode: host
    networks:
      - proxy
    deploy:
      mode: global
      labels:
        - "traefik.docker.network=proxy"
        - "traefik.enable=true"
        - "traefik.port=8000"
        - "traefik.frontend.rule=Host:${PROXY_WHOAMI_DOMAIN}"

networks:
  agents:
    external:
      name: agents
  proxy:
    external:
      name: proxy

volumes:
  portainer_data:
    external: true
  traefik_data:
    external: true
  swarmpit_data:
    external: true